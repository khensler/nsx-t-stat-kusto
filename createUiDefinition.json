{
    "$schema": "<relative path to createFormUI.schema.json>",
    "view": {
        "kind": "Form",
        "properties": {
            "title": "AVS SDDC and NSX Monitoring",
            "steps": [
                {
                    "name" : "privateCloud",
                    "label": "Private Cloud Selection",
                    "elements": [
                        {
                            "name": "privateCloudSelector",
                            "type": "Microsoft.Solutions.ResourceSelector",
                            "label": "Select AVS Private Cloud",
                            "resourceType": "Microsoft.AVS/privateClouds",
                            "options": {
                              "filter": {
                                "subscription": "onBasics"
                              }
                            }
                          }
                    ]
                },
                {
                    "name" : "virtualNetwork",
                    "label": "Virtual Network Selection",
                    "elements": [
                        {
                            "name": "virtualNetwork",
                            "type": "Microsoft.Network.VirtualNetworkCombo",
                            "label": {
                                "virtualNetwork": "Select existing virtual network with access to the Private Cloud",
                                "subnets": "Subnet"
                            },
                            "options": {
                                "hideExisting": false,
                                "filter": {
                                    "subscription": "onBasics",
                                    "location": "onBasics"
                              }
                            },
                            "constraints": {
                                "minAddressPrefixSize": "/30"
                            },
                            "subnets": {
                                "subnet1": {
                                  "label": "Subnet",
                                  "defaultValue": {
                                    "name": "Default"
                                  },
                                  "constraints": {
                                    "minAddressPrefixSize": "/30",
                                    "minAddressCount": 1,
                                    "requireContiguousAddresses": true
                                  }
                                }
                            }
                        }
                    ]
                },
                {
                    "name" : "virtualMachineName",
                    "label": "Virtual Machine",
                    "elements": [
                        {
                            "name": "virtualMachineName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Enter a name for the Virtual Machine"
                        },
                        {
                            "name" :"virtualMachineUserName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Enter a username for the VM"
                        },
                        {
                            "name" :"virtualMachinePassword",
                            "type": "Microsoft.Common.PasswordBox",
                            "label": {
                                "password": "Password",
                                "confirmPassword": "Confirm password"
                            },
                            "toolTip": "",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-zA-Z0-9]{8,}$",
                                "validationMessage": "Password must be at least 8 characters long, contain only numbers and letters"
                            },
                            "options": {
                                "hideConfirmation": false
                            },
                            "visible": true
                        }
                    ]
                }
            ]
        },
        "outputs": {
            "parameters": {
                "Prefix": "[steps('basics').avsDeploymentPrefix]",
                "Location": "[steps('basics').avsDeploymentScope.location.name]",
                "DeployMonitoring": "[steps('Monitoring').DeployMonitoring]",
                "DeployWorkbook": "[steps('Monitoring').AVSWorkbook.DeployAVSWorkbook]",
                "DeployDashboard": "[steps('Monitoring').AVSDashboard.DeployDashboard]",
                "DeployServiceHealth": "[steps('Monitoring').AVSDashboard.DeployServiceHealth]",
                "DeployMetricAlerts": "[steps('Monitoring').AVSDashboard.DeployAVSAlerts]",
                "PrivateCloudName": "[steps('Monitoring').MonitoringInputs.avsSelector.name]",
                "PrivateCloudResourceId": "[steps('Monitoring').MonitoringInputs.avsSelector.id]",
                "AlertEmails": "[steps('Monitoring').MonitoringInputs.ActionGroupEmails]",
                "CPUUsageThreshold": "[steps('Monitoring').MonitoringInputs.cpuUsageThreshold]",
                "MemoryUsageThreshold": "[steps('Monitoring').MonitoringInputs.memoryUsageThreshold]",
                "StorageUsageThreshold": "[steps('Monitoring').MonitoringInputs.storageUsageThreshold]",
                "DeployDiagnostics": "[steps('Diagnostics').DeployDiagnostics]",
                "DeployAVSLogsWorkspace": "[steps('Diagnostics').Workspace.AVSLogCollection]",
                "DiagnosticsPrivateCloudName": "[steps('Diagnostics').avsSelector2.name]",
                "DiagnosticsPrivateCloudResourceId": "[steps('Diagnostics').avsSelector2.id]",
                "DeployActivityLogDiagnostics": "[steps('Diagnostics').Workspace.ActivityLogCollection]",
                "DeployAVSLogsStorage": "[steps('Diagnostics').StorageAccount.StorageLogCollection]",
                "DeployWorkspace": "[steps('Diagnostics').Workspace.WorkspaceExists]",
                "ExistingWorkspaceId": "[steps('Diagnostics').Workspace.existingWorkspaceSelector.id]",
                "ExistingStorageAccountId": "[steps('Diagnostics').StorageAccount.existingStorageAccountSelector.id]",
                "DeployStorageAccount": "[steps('Diagnostics').StorageAccount.StorageAccountExists]",
                "StorageRetentionDays": "[steps('Diagnostics').StorageAccount.storageRetention]"
            },
            "kind": "Subscription",
            "location": "[steps('basics').avsDeploymentScope.location.name]",
            "subscriptionId": "[steps('basics').avsDeploymentScope.subscription.id]"
        }
    }
}
